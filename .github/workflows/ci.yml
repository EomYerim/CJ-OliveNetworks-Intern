name: Spring Boot CI to ECR

on:
  push:
    branches: [ "develop" ]

env:
  # ECR 레지스트리 주소와 리포지토리 이름을 변수로 설정
  ECR_REGISTRY: 051826731133.dkr.ecr.ap-northeast-2.amazonaws.com
  ECR_REPOSITORY: cjone-dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3


        # 2. AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 3. Amazon ECR에 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # 4. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'


        # 5. Gradle 빌드 권한
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew


      - name: Build without tests
        run: ./gradlew build -x test

#        # 6. Gradle로 빌드
#      - name: Build with Gradle
#        run: ./gradlew build

      # 7. Docker 이미지 빌드 및 ECR에 푸시 -> 이미지 태그 기반
          
      - name: Build and push Docker image
        run: |
          IMAGE_TAG=$(echo "${GITHUB_SHA::7}")
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG